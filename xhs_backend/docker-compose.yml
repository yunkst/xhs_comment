services:
  mongo:
    image: crpi-v2c8hiamyw0hvcvs.cn-hangzhou.personal.cr.aliyuncs.com/open_ydz/mongo:latest # Use the official MongoDB image
    container_name: mongodb_service
    # ports:
    #   - "27017:27017" # Map host port to container port if external access needed
    volumes:
      - mongo_data:/data/db # Persist MongoDB data
    # Optional: Add environment variables for MongoDB authentication if needed
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - app-network

  redis: # 新增 Redis 服务
    image: redis:alpine # 使用官方的 Redis Alpine 镜像，比较小巧
    container_name: redis_service
    ports:
      - "6379:6379" # 仅在需要从宿主机直接访问Redis时取消注释，通常容器间通信不需要
    volumes:
      - redis_data:/data # 持久化 Redis 数据
    networks:
      - app-network
    healthcheck: # 添加健康检查，确保redis服务正常启动
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: 
      context: . # Build the image from the Dockerfile in the current directory
      # dockerfile: Dockerfile.dev # Use the Dockerfile.dev file
    container_name: xhs_backend_app
    # ports:
    #   - "8000:8000" # Map host port 8000 to container port 8000
    volumes:
      - .:/app # Mount current directory to /app in container for live code changes (dev)
    # environment:
    #   # Important: Point to the mongo service name, not localhost
    #   MONGODB_URL: mongodb://mongo:27017 
    #   DATABASE_NAME: xiaohongshu_data
    #   NOTIFICATIONS_COLLECTION: notifications
    #   COMMENTS_COLLECTION: comments
    #   # Pass the API secret token from your host environment or a .env file

    depends_on:
      mongo: # 确保 mongo 启动
        condition: service_started # 可以等待mongo服务完全启动，如果mongo启动较慢
      redis:  # 确保 redis 启动并健康
        condition: service_healthy 
    networks:
      - app-network
    env_file:
      - .env # Load all variables from .env file
    # 可以在 .env 文件中或此处直接定义 REDIS_HOST 和 REDIS_PORT
    # environment:
    #   REDIS_HOST: redis
    #   REDIS_PORT: 6379

networks:
  app-network:
    external: true
    name: app-network 

volumes:
  mongo_data: # Define the named volume for MongoDB data 
  redis_data: # 定义 Redis 的数据卷